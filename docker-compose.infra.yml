# Infrastructure services (MongoDB and Redis)
# Use: docker-compose -f docker-compose.infra.yml up -d

services:
  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: go-falcon-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD:-password123}
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - falcon-network

  mongodb-mcp:
    image: mongodb/mongodb-mcp-server:latest
    container_name: go-falcon-mongodb-mcp
    restart: unless-stopped
    environment:
      MDB_MCP_CONNECTION_STRING: mongodb://admin:password123@go-falcon-mongodb:27017/falcon?authSource=admin
      MDB_MCP_INDEX_CHECK: false
      MDB_MCP_TELEMETRY: disabled
      DO_NOT_TRACK: 1
    ports:
      - "3001:3001"
    networks:
      - falcon-network
    depends_on:
      mongodb:
        condition: service_started

  redis-mcp:
    image: falcon-redis-mcp:latest
    container_name: go-falcon-redis-mcp
    restart: unless-stopped
    entrypoint: ["tail", "-f", "/dev/null"]
    networks:
      - falcon-network
    depends_on:
      redis:
        condition: service_started

  # Redis
  redis:
    image: redis/redis-stack-server:latest
    container_name: go-falcon-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - falcon-network

volumes:
  mongodb_data:
  redis_data:

networks:
  falcon-network:
    driver: bridge