{
  "openapi": "3.1.0",
  "info": {
    "title": "Go-Falcon Gateway API",
    "description": "Complete OpenAPI 3.1 specification for the Go-Falcon API Gateway.\n\nThis specification covers all endpoints across multiple modules including authentication, user management, EVE Online integration, static data access, and task scheduling.\n\nVersion: dev\nGenerated: 2025-08-18T06:11:38Z",
    "contact": {
      "name": "Go-Falcon Team",
      "url": "https://github.com/go-falcon/go-falcon"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "dev"
  },
  "servers": [
    {
      "url": "https://go.eveonline.it",
      "description": "Development server"
    },
    {
      "url": "https://go.eveonline.it",
      "description": "Production server"
    }
  ],
  "paths": {
    "/auth/eve/callback": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Handle EVE SSO callback",
        "description": "Handle EVE SSO callback",
        "operationId": "get_auth_eve_callback",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/auth/eve/login": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Initiate EVE SSO login",
        "description": "Initiate EVE SSO login",
        "operationId": "get_auth_eve_login",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "auth_url": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/auth/eve/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh access token",
        "description": "Refresh access token",
        "operationId": "post_auth_eve_refresh",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "refresh_token"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_in": {
                      "type": "integer"
                    },
                    "refresh_token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "access_token": {
                      "type": "string"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "expires_in": {
                      "type": "integer"
                    },
                    "refresh_token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/eve/register": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Initiate EVE SSO registration with full scopes",
        "description": "Initiate EVE SSO registration with full scopes",
        "operationId": "get_auth_eve_register",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "auth_url": {
                      "type": "string"
                    },
                    "state": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/eve/token": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Exchange EVE token for JWT (mobile apps)",
        "description": "Exchange EVE token for JWT (mobile apps)",
        "operationId": "post_auth_eve_token",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "access_token": {
                    "type": "string"
                  },
                  "refresh_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "access_token"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/eve/verify": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Verify JWT token",
        "description": "Verify JWT token",
        "operationId": "get_auth_eve_verify",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/health": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Auth module health check",
        "description": "Auth module health check",
        "operationId": "get_auth_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "auth"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Basic login endpoint",
        "description": "Basic login endpoint",
        "operationId": "post_auth_login",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "refresh_token"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User logout",
        "description": "User logout",
        "operationId": "post_auth_logout",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/profile": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get user profile",
        "description": "Get user profile",
        "operationId": "get_auth_profile",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alliance_id": {
                      "type": "integer"
                    },
                    "alliance_name": {
                      "type": "string"
                    },
                    "birthday": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "character_id": {
                      "type": "integer"
                    },
                    "character_name": {
                      "type": "string"
                    },
                    "corporation_id": {
                      "type": "integer"
                    },
                    "corporation_name": {
                      "type": "string"
                    },
                    "last_login": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "profile_updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "scopes": {
                      "type": "string"
                    },
                    "security_status": {
                      "type": "number",
                      "format": "double"
                    },
                    "token_expiry": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "user_id": {
                      "type": "string"
                    },
                    "valid": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/profile/public": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get public profile by ID",
        "description": "Get public profile by ID",
        "operationId": "get_auth_profile_public",
        "parameters": [
          {
            "name": "character_id",
            "in": "query",
            "description": "EVE character ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alliance_id": {
                      "type": "integer"
                    },
                    "alliance_name": {
                      "type": "string"
                    },
                    "character_id": {
                      "type": "integer"
                    },
                    "character_name": {
                      "type": "string"
                    },
                    "corporation_id": {
                      "type": "integer"
                    },
                    "corporation_name": {
                      "type": "string"
                    },
                    "security_status": {
                      "type": "number",
                      "format": "double"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/profile/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Refresh profile from ESI",
        "description": "Refresh profile from ESI",
        "operationId": "post_auth_profile_refresh",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "force_refresh": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alliance_id": {
                      "type": "integer"
                    },
                    "alliance_name": {
                      "type": "string"
                    },
                    "birthday": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "character_id": {
                      "type": "integer"
                    },
                    "character_name": {
                      "type": "string"
                    },
                    "corporation_id": {
                      "type": "integer"
                    },
                    "corporation_name": {
                      "type": "string"
                    },
                    "last_login": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "profile_updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "scopes": {
                      "type": "string"
                    },
                    "security_status": {
                      "type": "number",
                      "format": "double"
                    },
                    "token_expiry": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "user_id": {
                      "type": "string"
                    },
                    "valid": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alliance_id": {
                      "type": "integer"
                    },
                    "alliance_name": {
                      "type": "string"
                    },
                    "birthday": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "character_id": {
                      "type": "integer"
                    },
                    "character_name": {
                      "type": "string"
                    },
                    "corporation_id": {
                      "type": "integer"
                    },
                    "corporation_name": {
                      "type": "string"
                    },
                    "last_login": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "profile_updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "scopes": {
                      "type": "string"
                    },
                    "security_status": {
                      "type": "number",
                      "format": "double"
                    },
                    "token_expiry": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "user_id": {
                      "type": "string"
                    },
                    "valid": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User registration endpoint",
        "description": "User registration endpoint",
        "operationId": "post_auth_register",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "refresh_token": {
                    "type": "string"
                  }
                },
                "required": [
                  "refresh_token"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/status": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get authentication status",
        "description": "Get authentication status",
        "operationId": "get_auth_status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "components": {
                      "type": "object"
                    },
                    "module": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "uptime": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "version": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/auth/token": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Retrieve current bearer token",
        "description": "Retrieve current bearer token",
        "operationId": "get_auth_token",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "token": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/user": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get current user information",
        "description": "Get current user information",
        "operationId": "get_auth_user",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "character_id": {
                      "type": "integer"
                    },
                    "character_name": {
                      "type": "string"
                    },
                    "expires_at": {
                      "type": "string"
                    },
                    "scopes": {
                      "type": "string"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/alliance/{allianceID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get alliance information",
        "description": "Get alliance information",
        "operationId": "get_dev_alliance_allianceID",
        "parameters": [
          {
            "name": "allianceID",
            "in": "path",
            "description": "The allianceID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "DevResponse": {
                      "type": "object",
                      "properties": {
                        "cache": {
                          "type": "object",
                          "properties": {
                            "cache_hit": {
                              "type": "boolean"
                            },
                            "cache_key": {
                              "type": "string"
                            },
                            "cached": {
                              "type": "boolean"
                            },
                            "expires_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "expires_in": {
                              "type": "integer"
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "description": "Any type"
                        },
                        "details": {
                          "type": "string"
                        },
                        "endpoint": {
                          "type": "string"
                        },
                        "error": {
                          "type": "string"
                        },
                        "module": {
                          "type": "string"
                        },
                        "response_time_ms": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "source": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "creator_corporation_id": {
                      "type": "integer"
                    },
                    "creator_id": {
                      "type": "integer"
                    },
                    "date_founded": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "executor_corporation_id": {
                      "type": "integer"
                    },
                    "faction_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "ticker": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/cache/stats": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get cache statistics",
        "description": "Get cache statistics",
        "operationId": "get_dev_cache_stats",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/cache/test": {
      "post": {
        "tags": [
          "Dev"
        ],
        "summary": "Test cache operations",
        "description": "Test cache operations",
        "operationId": "post_dev_cache_test",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/cache/{key}": {
      "delete": {
        "tags": [
          "Dev"
        ],
        "summary": "Delete cache key",
        "description": "Delete cache key",
        "operationId": "delete_dev_cache_key",
        "parameters": [
          {
            "name": "key",
            "in": "path",
            "description": "The key identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/character/{characterID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get character information",
        "description": "Get character information",
        "operationId": "get_dev_character_characterID",
        "parameters": [
          {
            "name": "characterID",
            "in": "path",
            "description": "The characterID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "DevResponse": {
                      "type": "object",
                      "properties": {
                        "cache": {
                          "type": "object",
                          "properties": {
                            "cache_hit": {
                              "type": "boolean"
                            },
                            "cache_key": {
                              "type": "string"
                            },
                            "cached": {
                              "type": "boolean"
                            },
                            "expires_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "expires_in": {
                              "type": "integer"
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "description": "Any type"
                        },
                        "details": {
                          "type": "string"
                        },
                        "endpoint": {
                          "type": "string"
                        },
                        "error": {
                          "type": "string"
                        },
                        "module": {
                          "type": "string"
                        },
                        "response_time_ms": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "source": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "alliance_id": {
                      "type": "integer"
                    },
                    "ancestry_id": {
                      "type": "integer"
                    },
                    "birthday": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "bloodline_id": {
                      "type": "integer"
                    },
                    "corporation_id": {
                      "type": "integer"
                    },
                    "faction_id": {
                      "type": "integer"
                    },
                    "gender": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "race_id": {
                      "type": "integer"
                    },
                    "security_status": {
                      "type": "number",
                      "format": "double"
                    },
                    "title": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/corporation/{corporationID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get corporation information",
        "description": "Get corporation information",
        "operationId": "get_dev_corporation_corporationID",
        "parameters": [
          {
            "name": "corporationID",
            "in": "path",
            "description": "The corporationID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "DevResponse": {
                      "type": "object",
                      "properties": {
                        "cache": {
                          "type": "object",
                          "properties": {
                            "cache_hit": {
                              "type": "boolean"
                            },
                            "cache_key": {
                              "type": "string"
                            },
                            "cached": {
                              "type": "boolean"
                            },
                            "expires_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "expires_in": {
                              "type": "integer"
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "description": "Any type"
                        },
                        "details": {
                          "type": "string"
                        },
                        "endpoint": {
                          "type": "string"
                        },
                        "error": {
                          "type": "string"
                        },
                        "module": {
                          "type": "string"
                        },
                        "response_time_ms": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "source": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "alliance_id": {
                      "type": "integer"
                    },
                    "ceo_id": {
                      "type": "integer"
                    },
                    "creator_id": {
                      "type": "integer"
                    },
                    "date_founded": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "type": "string"
                    },
                    "faction_id": {
                      "type": "integer"
                    },
                    "member_count": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "tax_rate": {
                      "type": "number",
                      "format": "double"
                    },
                    "ticker": {
                      "type": "string"
                    },
                    "url": {
                      "type": "string"
                    },
                    "war_eligible": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/debug/session": {
      "post": {
        "tags": [
          "Dev"
        ],
        "summary": "Create a new debug session",
        "description": "Create a new debug session",
        "operationId": "post_dev_debug_session",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/debug/session/{sessionID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Retrieve a debug session",
        "description": "Retrieve a debug session",
        "operationId": "get_dev_debug_session_sessionID",
        "parameters": [
          {
            "name": "sessionID",
            "in": "path",
            "description": "The sessionID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/debug/session/{sessionID}/action": {
      "post": {
        "tags": [
          "Dev"
        ],
        "summary": "Perform a debug action",
        "description": "Perform a debug action",
        "operationId": "post_dev_debug_session_sessionID_action",
        "parameters": [
          {
            "name": "sessionID",
            "in": "path",
            "description": "The sessionID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/esi/status": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get EVE Online server status",
        "description": "Get EVE Online server status",
        "operationId": "get_dev_esi_status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/esi/test": {
      "post": {
        "tags": [
          "Dev"
        ],
        "summary": "Test custom ESI endpoints",
        "description": "Test custom ESI endpoints",
        "operationId": "post_dev_esi_test",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/health": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Dev module health check",
        "description": "Dev module health check",
        "operationId": "get_dev_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "dev"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/health/check": {
      "post": {
        "tags": [
          "Dev"
        ],
        "summary": "Run comprehensive health checks",
        "description": "Run comprehensive health checks",
        "operationId": "post_dev_health_check",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/health/components": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get component health information",
        "description": "Get component health information",
        "operationId": "get_dev_health_components",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/mock": {
      "post": {
        "tags": [
          "Dev"
        ],
        "summary": "Generate mock data for testing",
        "description": "Generate mock data for testing",
        "operationId": "post_dev_mock",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/sde/agent/{agentID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get SDE agent information",
        "description": "Get SDE agent information",
        "operationId": "get_dev_sde_agent_agentID",
        "parameters": [
          {
            "name": "agentID",
            "in": "path",
            "description": "The agentID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cache": {
                      "type": "object",
                      "properties": {
                        "cache_hit": {
                          "type": "boolean"
                        },
                        "cache_key": {
                          "type": "string"
                        },
                        "cached": {
                          "type": "boolean"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "expires_in": {
                          "type": "integer"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "description": "Any type"
                    },
                    "details": {
                      "type": "string"
                    },
                    "endpoint": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "module": {
                      "type": "string"
                    },
                    "response_time_ms": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "source": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/blueprint/{blueprintID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get SDE blueprint information",
        "description": "Get SDE blueprint information",
        "operationId": "get_dev_sde_blueprint_blueprintID",
        "parameters": [
          {
            "name": "blueprintID",
            "in": "path",
            "description": "The blueprintID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cache": {
                      "type": "object",
                      "properties": {
                        "cache_hit": {
                          "type": "boolean"
                        },
                        "cache_key": {
                          "type": "string"
                        },
                        "cached": {
                          "type": "boolean"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "expires_in": {
                          "type": "integer"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "description": "Any type"
                    },
                    "details": {
                      "type": "string"
                    },
                    "endpoint": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "module": {
                      "type": "string"
                    },
                    "response_time_ms": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "source": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/category/{categoryID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get SDE category information",
        "description": "Get SDE category information",
        "operationId": "get_dev_sde_category_categoryID",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "description": "The categoryID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cache": {
                      "type": "object",
                      "properties": {
                        "cache_hit": {
                          "type": "boolean"
                        },
                        "cache_key": {
                          "type": "string"
                        },
                        "cached": {
                          "type": "boolean"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "expires_in": {
                          "type": "integer"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "description": "Any type"
                    },
                    "details": {
                      "type": "string"
                    },
                    "endpoint": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "module": {
                      "type": "string"
                    },
                    "response_time_ms": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "source": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/entity/{type}/{id}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get specific SDE entity",
        "description": "Get specific SDE entity",
        "operationId": "get_dev_sde_entity_type_id",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/redis/{type}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get all Redis-based SDE entities of a type",
        "description": "Get all Redis-based SDE entities of a type",
        "operationId": "get_dev_sde_redis_type",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cache": {
                      "type": "object",
                      "properties": {
                        "cache_hit": {
                          "type": "boolean"
                        },
                        "cache_key": {
                          "type": "string"
                        },
                        "cached": {
                          "type": "boolean"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "expires_in": {
                          "type": "integer"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "description": "Any type"
                    },
                    "details": {
                      "type": "string"
                    },
                    "endpoint": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "module": {
                      "type": "string"
                    },
                    "response_time_ms": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "source": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/redis/{type}/{id}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get specific Redis-based SDE entity",
        "description": "Get specific Redis-based SDE entity",
        "operationId": "get_dev_sde_redis_type_id",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cache": {
                      "type": "object",
                      "properties": {
                        "cache_hit": {
                          "type": "boolean"
                        },
                        "cache_key": {
                          "type": "string"
                        },
                        "cached": {
                          "type": "boolean"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "expires_in": {
                          "type": "integer"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "description": "Any type"
                    },
                    "details": {
                      "type": "string"
                    },
                    "endpoint": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "module": {
                      "type": "string"
                    },
                    "response_time_ms": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "source": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/status": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get SDE service status",
        "description": "Get SDE service status",
        "operationId": "get_dev_sde_status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "DevResponse": {
                      "type": "object",
                      "properties": {
                        "cache": {
                          "type": "object",
                          "properties": {
                            "cache_hit": {
                              "type": "boolean"
                            },
                            "cache_key": {
                              "type": "string"
                            },
                            "cached": {
                              "type": "boolean"
                            },
                            "expires_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "expires_in": {
                              "type": "integer"
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "description": "Any type"
                        },
                        "details": {
                          "type": "string"
                        },
                        "endpoint": {
                          "type": "string"
                        },
                        "error": {
                          "type": "string"
                        },
                        "module": {
                          "type": "string"
                        },
                        "response_time_ms": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "source": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "entities_count": {
                      "type": "object"
                    },
                    "last_update": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "load_time": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "loaded": {
                      "type": "boolean"
                    },
                    "memory_usage_bytes": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "statistics": {
                      "type": "object",
                      "properties": {
                        "data_size_bytes": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "entities_by_type": {
                          "type": "object"
                        },
                        "index_size_bytes": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "last_update": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "total_entities": {
                          "type": "integer"
                        }
                      }
                    },
                    "version": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/types": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get all SDE types",
        "description": "Get all SDE types",
        "operationId": "get_dev_sde_types",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cache": {
                      "type": "object",
                      "properties": {
                        "cache_hit": {
                          "type": "boolean"
                        },
                        "cache_key": {
                          "type": "string"
                        },
                        "cached": {
                          "type": "boolean"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "expires_in": {
                          "type": "integer"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "description": "Any type"
                    },
                    "details": {
                      "type": "string"
                    },
                    "endpoint": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "module": {
                      "type": "string"
                    },
                    "response_time_ms": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "source": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/types/published": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get published SDE types only",
        "description": "Get published SDE types only",
        "operationId": "get_dev_sde_types_published",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "cache": {
                      "type": "object",
                      "properties": {
                        "cache_hit": {
                          "type": "boolean"
                        },
                        "cache_key": {
                          "type": "string"
                        },
                        "cached": {
                          "type": "boolean"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "expires_in": {
                          "type": "integer"
                        }
                      }
                    },
                    "data": {
                      "type": "object",
                      "description": "Any type"
                    },
                    "details": {
                      "type": "string"
                    },
                    "endpoint": {
                      "type": "string"
                    },
                    "error": {
                      "type": "string"
                    },
                    "module": {
                      "type": "string"
                    },
                    "response_time_ms": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "source": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/universe/{type}/{region}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get region data",
        "description": "Get region data",
        "operationId": "get_dev_sde_universe_type_region",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "path",
            "description": "The region identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/universe/{type}/{region}/systems": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get all systems in a region",
        "description": "Get all systems in a region",
        "operationId": "get_dev_sde_universe_type_region_systems",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "path",
            "description": "The region identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/universe/{type}/{region}/{constellation}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get constellation data",
        "description": "Get constellation data",
        "operationId": "get_dev_sde_universe_type_region_constellation",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "path",
            "description": "The region identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "constellation",
            "in": "path",
            "description": "The constellation identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/universe/{type}/{region}/{constellation}/systems": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get all systems in a constellation",
        "description": "Get all systems in a constellation",
        "operationId": "get_dev_sde_universe_type_region_constellation_systems",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "path",
            "description": "The region identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "constellation",
            "in": "path",
            "description": "The constellation identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/universe/{type}/{region}/{constellation}/{system}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get system data",
        "description": "Get system data",
        "operationId": "get_dev_sde_universe_type_region_constellation_system",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "region",
            "in": "path",
            "description": "The region identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "constellation",
            "in": "path",
            "description": "The constellation identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "system",
            "in": "path",
            "description": "The system identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/services": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Service discovery information",
        "description": "Service discovery information",
        "operationId": "get_dev_services",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer"
                    },
                    "services": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "endpoints": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "description": {
                                  "type": "string"
                                },
                                "method": {
                                  "type": "string"
                                },
                                "path": {
                                  "type": "string"
                                },
                                "permission": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "health": {
                            "type": "object",
                            "properties": {
                              "checks": {
                                "type": "array",
                                "items": {
                                  "type": "object",
                                  "properties": {
                                    "error": {
                                      "type": "string"
                                    },
                                    "message": {
                                      "type": "string"
                                    },
                                    "name": {
                                      "type": "string"
                                    },
                                    "status": {
                                      "type": "string"
                                    }
                                  }
                                }
                              },
                              "metadata": {
                                "type": "object"
                              },
                              "status": {
                                "type": "string"
                              },
                              "uptime": {
                                "type": "integer",
                                "format": "int64"
                              }
                            }
                          },
                          "metadata": {
                            "type": "object"
                          },
                          "name": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/status": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Module status information",
        "description": "Module status information",
        "operationId": "get_dev_status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "components": {
                      "type": "object"
                    },
                    "module": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "uptime": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "version": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/test/bulk": {
      "post": {
        "tags": [
          "Dev"
        ],
        "summary": "Run bulk tests",
        "description": "Run bulk tests",
        "operationId": "post_dev_test_bulk",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/test/performance": {
      "post": {
        "tags": [
          "Dev"
        ],
        "summary": "Run performance tests",
        "description": "Run performance tests",
        "operationId": "post_dev_test_performance",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/test/validate": {
      "post": {
        "tags": [
          "Dev"
        ],
        "summary": "Run validation tests",
        "description": "Run validation tests",
        "operationId": "post_dev_test_validate",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/universe/system/{systemID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get solar system information",
        "description": "Get solar system information",
        "operationId": "get_dev_universe_system_systemID",
        "parameters": [
          {
            "name": "systemID",
            "in": "path",
            "description": "The systemID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "DevResponse": {
                      "type": "object",
                      "properties": {
                        "cache": {
                          "type": "object",
                          "properties": {
                            "cache_hit": {
                              "type": "boolean"
                            },
                            "cache_key": {
                              "type": "string"
                            },
                            "cached": {
                              "type": "boolean"
                            },
                            "expires_at": {
                              "type": "string",
                              "format": "date-time"
                            },
                            "expires_in": {
                              "type": "integer"
                            }
                          }
                        },
                        "data": {
                          "type": "object",
                          "description": "Any type"
                        },
                        "details": {
                          "type": "string"
                        },
                        "endpoint": {
                          "type": "string"
                        },
                        "error": {
                          "type": "string"
                        },
                        "module": {
                          "type": "string"
                        },
                        "response_time_ms": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "source": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string"
                        },
                        "timestamp": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    },
                    "constellation_id": {
                      "type": "integer"
                    },
                    "name": {
                      "type": "string"
                    },
                    "planets": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "moons": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "planet_id": {
                            "type": "integer"
                          },
                          "position": {
                            "type": "object",
                            "properties": {
                              "x": {
                                "type": "number",
                                "format": "double"
                              },
                              "y": {
                                "type": "number",
                                "format": "double"
                              },
                              "z": {
                                "type": "number",
                                "format": "double"
                              }
                            }
                          }
                        }
                      }
                    },
                    "position": {
                      "type": "object",
                      "description": "Circular reference to Position"
                    },
                    "security_class": {
                      "type": "string"
                    },
                    "security_status": {
                      "type": "number",
                      "format": "double"
                    },
                    "star_id": {
                      "type": "integer"
                    },
                    "stargates": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "destination": {
                            "type": "integer"
                          },
                          "position": {
                            "type": "object",
                            "description": "Circular reference to Position"
                          },
                          "stargate_id": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "stations": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "type": "string"
                          },
                          "owner_id": {
                            "type": "integer"
                          },
                          "position": {
                            "type": "object",
                            "description": "Circular reference to Position"
                          },
                          "station_id": {
                            "type": "integer"
                          },
                          "type_id": {
                            "type": "integer"
                          }
                        }
                      }
                    },
                    "system_id": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/groups/": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List all groups with optional filtering",
        "description": "List all groups with optional filtering",
        "operationId": "get_groups_root",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action_text": {
                            "type": "string"
                          },
                          "action_url": {
                            "type": "string"
                          },
                          "category": {
                            "type": "string"
                          },
                          "channels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "delivery_status": {
                            "type": "object"
                          },
                          "expires_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "id": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object"
                          },
                          "priority": {
                            "type": "string"
                          },
                          "read": {
                            "type": "boolean"
                          },
                          "read_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "sender_id": {
                            "type": "integer"
                          },
                          "sender_name": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    },
                    "total_pages": {
                      "type": "integer"
                    },
                    "unread_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create a new group (requires groups:management:write)",
        "description": "Create a new group (requires groups:management:write)",
        "operationId": "post_groups_root",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action_text": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "action_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "category": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "channels": {
                    "type": "array",
                    "enum": [
                      "in_app",
                      "email",
                      "discord"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "message": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 2000
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "normal",
                      "high",
                      "critical"
                    ]
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "minItems": 1,
                    "maxItems": 100
                  },
                  "title": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 200
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "system",
                      "user",
                      "alert",
                      "event"
                    ]
                  }
                },
                "required": [
                  "type",
                  "title",
                  "message",
                  "priority",
                  "recipients"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "delivery_info": {
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "recipients": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "delivery_info": {
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "recipients": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/groups/admin/audit": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get permission audit logs (super admin only)",
        "description": "Get permission audit logs (super admin only)",
        "operationId": "get_groups_admin_audit",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entries": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string"
                          },
                          "actor_id": {
                            "type": "integer"
                          },
                          "actor_name": {
                            "type": "string"
                          },
                          "details": {
                            "type": "object"
                          },
                          "id": {
                            "type": "string",
                            "format": "byte"
                          },
                          "ip_address": {
                            "type": "string"
                          },
                          "resource": {
                            "type": "string"
                          },
                          "service": {
                            "type": "string"
                          },
                          "subject_id": {
                            "type": "string"
                          },
                          "subject_type": {
                            "type": "string"
                          },
                          "timestamp": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "user_agent": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total_pages": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/groups/admin/permissions": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Revoke permission from subject (super admin only)",
        "description": "Revoke permission from subject (super admin only)",
        "operationId": "delete_groups_admin_permissions",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Grant permission to subject (super admin only)",
        "description": "Grant permission to subject (super admin only)",
        "operationId": "post_groups_admin_permissions",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": [
                      "read",
                      "write",
                      "delete",
                      "admin"
                    ]
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "reason": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 500
                  },
                  "resource": {
                    "type": "string"
                  },
                  "service": {
                    "type": "string"
                  },
                  "subject_id": {
                    "type": "string"
                  },
                  "subject_type": {
                    "type": "string",
                    "enum": [
                      "group",
                      "member",
                      "corporation",
                      "alliance"
                    ]
                  }
                },
                "required": [
                  "service",
                  "resource",
                  "action",
                  "subject_type",
                  "subject_id",
                  "reason"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "granted_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "granted_by": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "resource": {
                      "type": "string"
                    },
                    "service": {
                      "type": "string"
                    },
                    "subject_id": {
                      "type": "string"
                    },
                    "subject_name": {
                      "type": "string"
                    },
                    "subject_type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "action": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "granted_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "granted_by": {
                      "type": "integer"
                    },
                    "id": {
                      "type": "string"
                    },
                    "reason": {
                      "type": "string"
                    },
                    "resource": {
                      "type": "string"
                    },
                    "service": {
                      "type": "string"
                    },
                    "subject_id": {
                      "type": "string"
                    },
                    "subject_name": {
                      "type": "string"
                    },
                    "subject_type": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/groups/admin/permissions/assignments": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List permission assignments (super admin only)",
        "description": "List permission assignments (super admin only)",
        "operationId": "get_groups_admin_permissions_assignments",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "assignments": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "expires_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "granted_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "granted_by": {
                            "type": "integer"
                          },
                          "id": {
                            "type": "string"
                          },
                          "reason": {
                            "type": "string"
                          },
                          "resource": {
                            "type": "string"
                          },
                          "service": {
                            "type": "string"
                          },
                          "subject_id": {
                            "type": "string"
                          },
                          "subject_name": {
                            "type": "string"
                          },
                          "subject_type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total_pages": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/groups/admin/services": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List all permission services (super admin only)",
        "description": "List all permission services (super admin only)",
        "operationId": "get_groups_admin_services",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "services": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "description": {
                            "type": "string"
                          },
                          "display_name": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "resources": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "actions": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  },
                                  "minItems": 1
                                },
                                "description": {
                                  "type": "string"
                                },
                                "display_name": {
                                  "type": "string"
                                },
                                "enabled": {
                                  "type": "boolean"
                                },
                                "name": {
                                  "type": "string"
                                }
                              },
                              "required": [
                                "name",
                                "display_name",
                                "actions"
                              ]
                            }
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total_pages": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create new permission service (super admin only)",
        "description": "Create new permission service (super admin only)",
        "operationId": "post_groups_admin_services",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 500
                  },
                  "display_name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100
                  },
                  "name": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 50,
                    "pattern": "^[a-zA-Z0-9]+$"
                  },
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "actions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 1
                        },
                        "description": {
                          "type": "string"
                        },
                        "display_name": {
                          "type": "string"
                        },
                        "enabled": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "display_name",
                        "actions"
                      ]
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "name",
                  "display_name",
                  "description",
                  "resources"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "resources": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "minItems": 1
                          },
                          "description": {
                            "type": "string"
                          },
                          "display_name": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "display_name",
                          "actions"
                        ]
                      }
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "resources": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "minItems": 1
                          },
                          "description": {
                            "type": "string"
                          },
                          "display_name": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "display_name",
                          "actions"
                        ]
                      }
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/groups/admin/services/{serviceName}": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete permission service (super admin only)",
        "description": "Delete permission service (super admin only)",
        "operationId": "delete_groups_admin_services_serviceName",
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "description": "The serviceName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get permission service details (super admin only)",
        "description": "Get permission service details (super admin only)",
        "operationId": "get_groups_admin_services_serviceName",
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "description": "The serviceName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "resources": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "minItems": 1
                          },
                          "description": {
                            "type": "string"
                          },
                          "display_name": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "display_name",
                          "actions"
                        ]
                      }
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Update permission service (super admin only)",
        "description": "Update permission service (super admin only)",
        "operationId": "put_groups_admin_services_serviceName",
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "description": "The serviceName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 500
                  },
                  "display_name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 100
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "resources": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "actions": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "minItems": 1
                        },
                        "description": {
                          "type": "string"
                        },
                        "display_name": {
                          "type": "string"
                        },
                        "enabled": {
                          "type": "boolean"
                        },
                        "name": {
                          "type": "string"
                        }
                      },
                      "required": [
                        "name",
                        "display_name",
                        "actions"
                      ]
                    },
                    "minItems": 1
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "description": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "resources": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "actions": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            },
                            "minItems": 1
                          },
                          "description": {
                            "type": "string"
                          },
                          "display_name": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "name": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "name",
                          "display_name",
                          "actions"
                        ]
                      }
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/groups/admin/stats": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get group statistics (super admin only)",
        "description": "Get group statistics (super admin only)",
        "operationId": "get_groups_admin_stats",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "active_members": {
                      "type": "integer"
                    },
                    "custom_groups": {
                      "type": "integer"
                    },
                    "default_groups": {
                      "type": "integer"
                    },
                    "group_distribution": {
                      "type": "object"
                    },
                    "last_updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "membership_trends": {
                      "type": "object"
                    },
                    "total_groups": {
                      "type": "integer"
                    },
                    "total_members": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/groups/admin/subjects/groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List groups for permission assignment (super admin only)",
        "description": "List groups for permission assignment (super admin only)",
        "operationId": "get_groups_admin_subjects_groups",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "subjects": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer",
                      "format": "int64"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/groups/health": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Groups module health check",
        "description": "Groups module health check",
        "operationId": "get_groups_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "groups"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/groups/permissions/granular/check": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Check granular permission for authenticated user",
        "description": "Check granular permission for authenticated user",
        "operationId": "post_groups_permissions_granular_check",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string"
                  },
                  "character_id": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "resource": {
                    "type": "string"
                  },
                  "service": {
                    "type": "string"
                  }
                },
                "required": [
                  "service",
                  "resource",
                  "action",
                  "character_id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "character_id": {
                      "type": "integer"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "last_updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "permissions": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "character_id": {
                      "type": "integer"
                    },
                    "groups": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "last_updated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "permissions": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/groups/{groupID}": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete group (requires groups:management:delete)",
        "description": "Delete group (requires groups:management:delete)",
        "operationId": "delete_groups_groupID",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "description": "The groupID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get specific group details (requires groups:management:read)",
        "description": "Get specific group details (requires groups:management:read)",
        "operationId": "get_groups_groupID",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "description": "The groupID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "auto_assignment_rules": {
                      "type": "object",
                      "properties": {
                        "alliance_ids": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "corporation_ids": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "min_security_status": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "created_by": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "discord_roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "role_name": {
                            "type": "string"
                          },
                          "server_id": {
                            "type": "string"
                          },
                          "server_name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "is_default": {
                      "type": "boolean"
                    },
                    "is_member": {
                      "type": "boolean"
                    },
                    "member_count": {
                      "type": "integer"
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assigned_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "assignment_metadata": {
                            "type": "object"
                          },
                          "assignment_source": {
                            "type": "string"
                          },
                          "character_id": {
                            "type": "integer"
                          },
                          "expires_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "last_validated": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "validation_status": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Update existing group (requires groups:management:write)",
        "description": "Update existing group (requires groups:management:write)",
        "operationId": "put_groups_groupID",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "description": "The groupID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "auto_assignment_rules": {
                    "type": "object",
                    "properties": {
                      "alliance_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "corporation_ids": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "min_security_status": {
                        "type": "number",
                        "format": "double"
                      }
                    }
                  },
                  "description": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 500
                  },
                  "discord_roles": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "role_name": {
                          "type": "string"
                        },
                        "server_id": {
                          "type": "string"
                        },
                        "server_name": {
                          "type": "string"
                        }
                      }
                    }
                  },
                  "is_default": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 50,
                    "pattern": "^[a-zA-Z0-9]+$"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "auto_assignment_rules": {
                      "type": "object",
                      "properties": {
                        "alliance_ids": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "corporation_ids": {
                          "type": "array",
                          "items": {
                            "type": "integer"
                          }
                        },
                        "min_security_status": {
                          "type": "number",
                          "format": "double"
                        }
                      }
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "created_by": {
                      "type": "integer"
                    },
                    "description": {
                      "type": "string"
                    },
                    "discord_roles": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "role_name": {
                            "type": "string"
                          },
                          "server_id": {
                            "type": "string"
                          },
                          "server_name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "id": {
                      "type": "string"
                    },
                    "is_default": {
                      "type": "boolean"
                    },
                    "is_member": {
                      "type": "boolean"
                    },
                    "member_count": {
                      "type": "integer"
                    },
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assigned_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "assignment_metadata": {
                            "type": "object"
                          },
                          "assignment_source": {
                            "type": "string"
                          },
                          "character_id": {
                            "type": "integer"
                          },
                          "expires_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "last_validated": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "validation_status": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/groups/{groupID}/members": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List group members (requires groups:management:read)",
        "description": "List group members (requires groups:management:read)",
        "operationId": "get_groups_groupID_members",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "description": "The groupID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "members": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "assigned_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "assigned_by": {
                            "type": "integer"
                          },
                          "character_id": {
                            "type": "integer"
                          },
                          "character_name": {
                            "type": "string"
                          },
                          "expires_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "is_active": {
                            "type": "boolean"
                          },
                          "last_validated": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "validation_status": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total_pages": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Add member to group (requires groups:management:write)",
        "description": "Add member to group (requires groups:management:write)",
        "operationId": "post_groups_groupID_members",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "description": "The groupID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "assignment_metadata": {
                    "type": "object"
                  },
                  "character_id": {
                    "type": "integer",
                    "minimum": 1
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "reason": {
                    "type": "string"
                  }
                },
                "required": [
                  "character_id"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "assigned_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "assignment_metadata": {
                      "type": "object"
                    },
                    "assignment_source": {
                      "type": "string"
                    },
                    "character_id": {
                      "type": "integer"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_validated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "validation_status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "assigned_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "assignment_metadata": {
                      "type": "object"
                    },
                    "assignment_source": {
                      "type": "string"
                    },
                    "character_id": {
                      "type": "integer"
                    },
                    "expires_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "last_validated": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "validation_status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/groups/{groupID}/members/{characterID}": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Remove member from group (requires groups:management:write)",
        "description": "Remove member from group (requires groups:management:write)",
        "operationId": "delete_groups_groupID_members_characterID",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "description": "The groupID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "characterID",
            "in": "path",
            "description": "The characterID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "summary": "Gateway health check with version information",
        "description": "Gateway health check with version information",
        "operationId": "get_gateway_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "gateway"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get user's notifications with filtering",
        "description": "Get user's notifications with filtering",
        "operationId": "get_notifications_root",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action_text": {
                            "type": "string"
                          },
                          "action_url": {
                            "type": "string"
                          },
                          "category": {
                            "type": "string"
                          },
                          "channels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "delivery_status": {
                            "type": "object"
                          },
                          "expires_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "id": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object"
                          },
                          "priority": {
                            "type": "string"
                          },
                          "read": {
                            "type": "boolean"
                          },
                          "read_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "sender_id": {
                            "type": "integer"
                          },
                          "sender_name": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    },
                    "total_pages": {
                      "type": "integer"
                    },
                    "unread_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Send a new notification",
        "description": "Send a new notification",
        "operationId": "post_notifications_root",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action_text": {
                    "type": "string",
                    "maxLength": 50
                  },
                  "action_url": {
                    "type": "string",
                    "format": "uri"
                  },
                  "category": {
                    "type": "string",
                    "maxLength": 100
                  },
                  "channels": {
                    "type": "array",
                    "enum": [
                      "in_app",
                      "email",
                      "discord"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time"
                  },
                  "message": {
                    "type": "string",
                    "minLength": 10,
                    "maxLength": 2000
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "normal",
                      "high",
                      "critical"
                    ]
                  },
                  "recipients": {
                    "type": "array",
                    "items": {
                      "type": "integer"
                    },
                    "minItems": 1,
                    "maxItems": 100
                  },
                  "title": {
                    "type": "string",
                    "minLength": 3,
                    "maxLength": 200
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "system",
                      "user",
                      "alert",
                      "event"
                    ]
                  }
                },
                "required": [
                  "type",
                  "title",
                  "message",
                  "priority",
                  "recipients"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "delivery_info": {
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "recipients": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "channels": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "delivery_info": {
                      "type": "object"
                    },
                    "id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "recipients": {
                      "type": "array",
                      "items": {
                        "type": "integer"
                      }
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notifications/bulk": {
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Bulk operations on notifications",
        "description": "Bulk operations on notifications",
        "operationId": "post_notifications_bulk",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notifications/health": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Notifications module health check",
        "description": "Notifications module health check",
        "operationId": "get_notifications_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "notifications"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/stats": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get notification statistics",
        "description": "Get notification statistics",
        "operationId": "get_notifications_stats",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "average_runtime": {
                      "type": "string"
                    },
                    "completed_today": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "enabled_tasks": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "failed_today": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "next_scheduled_run": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "queue_size": {
                      "type": "integer"
                    },
                    "running_tasks": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total_tasks": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "worker_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{id}": {
      "delete": {
        "tags": [
          "Notifications"
        ],
        "summary": "Delete specific notification",
        "description": "Delete specific notification",
        "operationId": "delete_notifications_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "Get specific notification",
        "description": "Get specific notification",
        "operationId": "get_notifications_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Notifications"
        ],
        "summary": "Update notification status",
        "description": "Update notification status",
        "operationId": "put_notifications_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "read": {
                    "type": "boolean"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "notification": {
                      "type": "object",
                      "properties": {
                        "action_text": {
                          "type": "string"
                        },
                        "action_url": {
                          "type": "string"
                        },
                        "category": {
                          "type": "string"
                        },
                        "channels": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "delivery_status": {
                          "type": "object"
                        },
                        "expires_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "id": {
                          "type": "string"
                        },
                        "message": {
                          "type": "string"
                        },
                        "metadata": {
                          "type": "object"
                        },
                        "priority": {
                          "type": "string"
                        },
                        "read": {
                          "type": "boolean"
                        },
                        "read_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "sender_id": {
                          "type": "integer"
                        },
                        "sender_name": {
                          "type": "string"
                        },
                        "title": {
                          "type": "string"
                        },
                        "type": {
                          "type": "string"
                        }
                      }
                    },
                    "success": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/health": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Scheduler module health check",
        "description": "Scheduler module health check",
        "operationId": "get_scheduler_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "scheduler"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/scheduler/reload": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Reload scheduler configuration",
        "description": "Reload scheduler configuration",
        "operationId": "post_scheduler_reload",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "failed": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "failure_count": {
                      "type": "integer"
                    },
                    "success": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "success_count": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "failed": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "failure_count": {
                      "type": "integer"
                    },
                    "success": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      }
                    },
                    "success_count": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/stats": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Get scheduler statistics and metrics",
        "description": "Get scheduler statistics and metrics",
        "operationId": "get_scheduler_stats",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "average_runtime": {
                      "type": "string"
                    },
                    "completed_today": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "enabled_tasks": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "failed_today": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "next_scheduled_run": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "queue_size": {
                      "type": "integer"
                    },
                    "running_tasks": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total_tasks": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "worker_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/scheduler/status": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Get scheduler service status",
        "description": "Get scheduler service status",
        "operationId": "get_scheduler_status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "components": {
                      "type": "object"
                    },
                    "module": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "uptime": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "version": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/scheduler/tasks": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "List all scheduled tasks",
        "description": "List all scheduled tasks",
        "operationId": "get_scheduler_tasks",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "tasks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "config": {
                            "type": "object"
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "created_by": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "id": {
                            "type": "string"
                          },
                          "last_run": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "metadata": {
                            "type": "object",
                            "properties": {
                              "average_runtime": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "failure_count": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "is_system": {
                                "type": "boolean"
                              },
                              "last_error": {
                                "type": "string"
                              },
                              "max_retries": {
                                "type": "integer"
                              },
                              "retry_interval": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "source": {
                                "type": "string"
                              },
                              "success_count": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "tags": {
                                "type": "array",
                                "items": {
                                  "type": "string"
                                }
                              },
                              "timeout": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "total_runs": {
                                "type": "integer",
                                "format": "int64"
                              },
                              "version": {
                                "type": "integer"
                              }
                            }
                          },
                          "name": {
                            "type": "string"
                          },
                          "next_run": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "priority": {
                            "type": "string"
                          },
                          "schedule": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          },
                          "updated_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updated_by": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "total": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total_pages": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Create a new scheduled task",
        "description": "Create a new scheduled task",
        "operationId": "post_scheduler_tasks",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "metadata": {
                    "type": "object",
                    "properties": {
                      "average_runtime": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "failure_count": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "is_system": {
                        "type": "boolean"
                      },
                      "last_error": {
                        "type": "string"
                      },
                      "max_retries": {
                        "type": "integer"
                      },
                      "retry_interval": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "source": {
                        "type": "string"
                      },
                      "success_count": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "tags": {
                        "type": "array",
                        "items": {
                          "type": "string"
                        }
                      },
                      "timeout": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "total_runs": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "version": {
                        "type": "integer"
                      }
                    }
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "normal",
                      "high",
                      "critical"
                    ]
                  },
                  "schedule": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  },
                  "type": {
                    "type": "string",
                    "enum": [
                      "http",
                      "function",
                      "system",
                      "custom"
                    ]
                  }
                },
                "required": [
                  "name",
                  "type",
                  "schedule",
                  "config"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "type": "object"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "created_by": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "last_run": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "average_runtime": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "failure_count": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "is_system": {
                          "type": "boolean"
                        },
                        "last_error": {
                          "type": "string"
                        },
                        "max_retries": {
                          "type": "integer"
                        },
                        "retry_interval": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "source": {
                          "type": "string"
                        },
                        "success_count": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "timeout": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "total_runs": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "version": {
                          "type": "integer"
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "priority": {
                      "type": "string"
                    },
                    "schedule": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_by": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "type": "object"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "created_by": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "last_run": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "average_runtime": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "failure_count": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "is_system": {
                          "type": "boolean"
                        },
                        "last_error": {
                          "type": "string"
                        },
                        "max_retries": {
                          "type": "integer"
                        },
                        "retry_interval": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "source": {
                          "type": "string"
                        },
                        "success_count": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "timeout": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "total_runs": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "version": {
                          "type": "integer"
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "priority": {
                      "type": "string"
                    },
                    "schedule": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_by": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}": {
      "delete": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Delete scheduled task",
        "description": "Delete scheduled task",
        "operationId": "delete_scheduler_tasks_taskID",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Get task details by ID",
        "description": "Get task details by ID",
        "operationId": "get_scheduler_tasks_taskID",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "type": "object"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "created_by": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "last_run": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "average_runtime": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "failure_count": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "is_system": {
                          "type": "boolean"
                        },
                        "last_error": {
                          "type": "string"
                        },
                        "max_retries": {
                          "type": "integer"
                        },
                        "retry_interval": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "source": {
                          "type": "string"
                        },
                        "success_count": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "timeout": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "total_runs": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "version": {
                          "type": "integer"
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "priority": {
                      "type": "string"
                    },
                    "schedule": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_by": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Update task configuration",
        "description": "Update task configuration",
        "operationId": "put_scheduler_tasks_taskID",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object"
                  },
                  "description": {
                    "type": "string",
                    "maxLength": 500
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "maxLength": 100
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "normal",
                      "high",
                      "critical"
                    ]
                  },
                  "schedule": {
                    "type": "string"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "config": {
                      "type": "object"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "created_by": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "id": {
                      "type": "string"
                    },
                    "last_run": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "metadata": {
                      "type": "object",
                      "properties": {
                        "average_runtime": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "failure_count": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "is_system": {
                          "type": "boolean"
                        },
                        "last_error": {
                          "type": "string"
                        },
                        "max_retries": {
                          "type": "integer"
                        },
                        "retry_interval": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "source": {
                          "type": "string"
                        },
                        "success_count": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "tags": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        },
                        "timeout": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "total_runs": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "version": {
                          "type": "integer"
                        }
                      }
                    },
                    "name": {
                      "type": "string"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "priority": {
                      "type": "string"
                    },
                    "schedule": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "type": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "updated_by": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}/executions/{executionID}": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Get specific execution details",
        "description": "Get specific execution details",
        "operationId": "get_scheduler_tasks_taskID_executions_executionID",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "executionID",
            "in": "path",
            "description": "The executionID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "duration": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "error": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "output": {
                      "type": "string"
                    },
                    "retry_count": {
                      "type": "integer"
                    },
                    "started_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string"
                    },
                    "task_id": {
                      "type": "string"
                    },
                    "worker_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}/history": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Get task execution history",
        "description": "Get task execution history",
        "operationId": "get_scheduler_tasks_taskID_history",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "executions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "completed_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "duration": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "error": {
                            "type": "string"
                          },
                          "id": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object"
                          },
                          "output": {
                            "type": "string"
                          },
                          "retry_count": {
                            "type": "integer"
                          },
                          "started_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "status": {
                            "type": "string"
                          },
                          "task_id": {
                            "type": "string"
                          },
                          "worker_id": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total_pages": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}/pause": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Pause scheduled task",
        "description": "Pause scheduled task",
        "operationId": "post_scheduler_tasks_taskID_pause",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "description": "Task-specific configuration"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether task is enabled"
                  },
                  "name": {
                    "type": "string",
                    "description": "Task name"
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Cron schedule expression"
                  },
                  "type": {
                    "type": "string",
                    "description": "Task type (http, function, system)"
                  }
                },
                "required": [
                  "name",
                  "type",
                  "schedule"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "execution_id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "started_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "execution_id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "started_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}/resume": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Resume paused task",
        "description": "Resume paused task",
        "operationId": "post_scheduler_tasks_taskID_resume",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "description": "Task-specific configuration"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether task is enabled"
                  },
                  "name": {
                    "type": "string",
                    "description": "Task name"
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Cron schedule expression"
                  },
                  "type": {
                    "type": "string",
                    "description": "Task type (http, function, system)"
                  }
                },
                "required": [
                  "name",
                  "type",
                  "schedule"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "execution_id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "started_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "execution_id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "started_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}/start": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Start/enable scheduled task",
        "description": "Start/enable scheduled task",
        "operationId": "post_scheduler_tasks_taskID_start",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "parameters": {
                    "type": "object"
                  },
                  "priority": {
                    "type": "string",
                    "enum": [
                      "low",
                      "normal",
                      "high",
                      "critical"
                    ]
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "duration": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "error": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "output": {
                      "type": "string"
                    },
                    "retry_count": {
                      "type": "integer"
                    },
                    "started_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string"
                    },
                    "task_id": {
                      "type": "string"
                    },
                    "worker_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "completed_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "duration": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "error": {
                      "type": "string"
                    },
                    "id": {
                      "type": "string"
                    },
                    "metadata": {
                      "type": "object"
                    },
                    "output": {
                      "type": "string"
                    },
                    "retry_count": {
                      "type": "integer"
                    },
                    "started_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string"
                    },
                    "task_id": {
                      "type": "string"
                    },
                    "worker_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}/stop": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Stop/disable scheduled task",
        "description": "Stop/disable scheduled task",
        "operationId": "post_scheduler_tasks_taskID_stop",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "description": "Task-specific configuration"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether task is enabled"
                  },
                  "name": {
                    "type": "string",
                    "description": "Task name"
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Cron schedule expression"
                  },
                  "type": {
                    "type": "string",
                    "description": "Task type (http, function, system)"
                  }
                },
                "required": [
                  "name",
                  "type",
                  "schedule"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "execution_id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "started_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "execution_id": {
                      "type": "string"
                    },
                    "message": {
                      "type": "string"
                    },
                    "started_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sde/health": {
      "get": {
        "tags": [
          "Sde"
        ],
        "summary": "SDE module health check",
        "description": "SDE module health check",
        "operationId": "get_sde_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "sde"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/sde/status": {
      "get": {
        "tags": [
          "Sde"
        ],
        "summary": "Get current SDE status (placeholder implementation)",
        "description": "Get current SDE status (placeholder implementation)",
        "operationId": "get_sde_status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "checks": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "error": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "name": {
                            "type": "string"
                          },
                          "status": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "components": {
                      "type": "object"
                    },
                    "module": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "uptime": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "version": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List users with pagination and filtering (requires users:read permission)",
        "description": "List users with pagination and filtering (requires users:read permission)",
        "operationId": "get_users_root",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "notifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "action_text": {
                            "type": "string"
                          },
                          "action_url": {
                            "type": "string"
                          },
                          "category": {
                            "type": "string"
                          },
                          "channels": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "created_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "delivery_status": {
                            "type": "object"
                          },
                          "expires_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "id": {
                            "type": "string"
                          },
                          "message": {
                            "type": "string"
                          },
                          "metadata": {
                            "type": "object"
                          },
                          "priority": {
                            "type": "string"
                          },
                          "read": {
                            "type": "boolean"
                          },
                          "read_at": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "sender_id": {
                            "type": "integer"
                          },
                          "sender_name": {
                            "type": "string"
                          },
                          "title": {
                            "type": "string"
                          },
                          "type": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "page": {
                      "type": "integer"
                    },
                    "page_size": {
                      "type": "integer"
                    },
                    "total": {
                      "type": "integer"
                    },
                    "total_pages": {
                      "type": "integer"
                    },
                    "unread_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/by-user-id/{user_id}/characters": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List characters for a user (requires authentication, self-access or users:read permission)",
        "description": "List characters for a user (requires authentication, self-access or users:read permission)",
        "operationId": "get_users_by-user-id_user_id_characters",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The user_id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "characters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "banned": {
                            "type": "boolean"
                          },
                          "character_id": {
                            "type": "integer"
                          },
                          "character_name": {
                            "type": "string"
                          },
                          "enabled": {
                            "type": "boolean"
                          },
                          "last_login": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "position": {
                            "type": "integer"
                          },
                          "user_id": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "count": {
                      "type": "integer"
                    },
                    "user_id": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/health": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Users module health check",
        "description": "Users module health check",
        "operationId": "get_users_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "users"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/users/stats": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user statistics (public endpoint)",
        "description": "Get user statistics (public endpoint)",
        "operationId": "get_users_stats",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "average_runtime": {
                      "type": "string"
                    },
                    "completed_today": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "enabled_tasks": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "failed_today": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "next_scheduled_run": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "queue_size": {
                      "type": "integer"
                    },
                    "running_tasks": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "total_tasks": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "worker_count": {
                      "type": "integer"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/users/{character_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user by character ID (requires users:read permission)",
        "description": "Get user by character ID (requires users:read permission)",
        "operationId": "get_users_character_id",
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "description": "The character_id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "banned": {
                      "type": "boolean"
                    },
                    "character_id": {
                      "type": "integer"
                    },
                    "character_name": {
                      "type": "string"
                    },
                    "created_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "enabled": {
                      "type": "boolean"
                    },
                    "invalid": {
                      "type": "boolean"
                    },
                    "last_login": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "notes": {
                      "type": "string"
                    },
                    "position": {
                      "type": "integer"
                    },
                    "scopes": {
                      "type": "string"
                    },
                    "updated_at": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "user_id": {
                      "type": "string"
                    },
                    "valid": {
                      "type": "boolean"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update user status and settings (requires users:write permission)",
        "description": "Update user status and settings (requires users:write permission)",
        "operationId": "put_users_character_id",
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "description": "The character_id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "banned": {
                    "type": "boolean"
                  },
                  "enabled": {
                    "type": "boolean"
                  },
                  "invalid": {
                    "type": "boolean"
                  },
                  "notes": {
                    "type": "string",
                    "maxLength": 1000
                  },
                  "position": {
                    "type": "integer",
                    "minimum": 0
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "success": {
                      "type": "boolean"
                    },
                    "user": {
                      "type": "object",
                      "properties": {
                        "banned": {
                          "type": "boolean"
                        },
                        "character_id": {
                          "type": "integer"
                        },
                        "character_name": {
                          "type": "string"
                        },
                        "created_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "enabled": {
                          "type": "boolean"
                        },
                        "invalid": {
                          "type": "boolean"
                        },
                        "last_login": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "notes": {
                          "type": "string"
                        },
                        "position": {
                          "type": "integer"
                        },
                        "scopes": {
                          "type": "string"
                        },
                        "updated_at": {
                          "type": "string",
                          "format": "date-time"
                        },
                        "user_id": {
                          "type": "string"
                        },
                        "valid": {
                          "type": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "error": {
            "type": "string",
            "description": "Error message"
          }
        },
        "required": [
          "error"
        ]
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Service status",
            "example": "healthy"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Response timestamp"
          },
          "version": {
            "type": "string",
            "description": "Service version"
          }
        },
        "required": [
          "status"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT token obtained from EVE Online SSO authentication",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Scheduler",
      "description": "Task scheduling and management endpoints"
    },
    {
      "name": "Sde",
      "description": "EVE Online Static Data Export management endpoints"
    },
    {
      "name": "Auth",
      "description": "Authentication and authorization endpoints using EVE Online SSO"
    },
    {
      "name": "Groups",
      "description": "Group management and permission system endpoints"
    },
    {
      "name": "Dev",
      "description": "Development and testing endpoints for EVE Online ESI and SDE data"
    },
    {
      "name": "Users",
      "description": "User management and profile endpoints"
    },
    {
      "name": "Notifications",
      "description": "Notification system endpoints"
    },
    {
      "name": "Gateway",
      "description": "Gateway health and status endpoints"
    }
  ],
  "externalDocs": {
    "description": "Go-Falcon Documentation",
    "url": "https://github.com/go-falcon/go-falcon/blob/main/README.md"
  }
}