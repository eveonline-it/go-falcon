{
  "openapi": "3.1.0",
  "info": {
    "title": "Go-Falcon Gateway API",
    "description": "Complete OpenAPI 3.1 specification for the Go-Falcon API Gateway.\n\nThis specification covers all endpoints across multiple modules including authentication, user management, EVE Online integration, static data access, and task scheduling.\n\nVersion: dev\nGenerated: 2025-08-17T13:46:24Z",
    "contact": {
      "name": "Go-Falcon Team",
      "url": "https://github.com/go-falcon/go-falcon"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    },
    "version": "dev"
  },
  "servers": [
    {
      "url": "http://localhost:8080",
      "description": "Development server"
    },
    {
      "url": "https://api.go-falcon.example.com",
      "description": "Production server"
    }
  ],
  "paths": {
    "/admin/permissions/assignments": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List admin",
        "description": "List permission assignments with filtering (super admin only)",
        "operationId": "get_groups_admin_permissions_assignments",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "assignments": {
                      "type": "array",
                      "description": "Array of assignments",
                      "items": {
                        "type": "object",
                        "description": "Resource item"
                      }
                    },
                    "count": {
                      "type": "integer",
                      "description": "Total number of items"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create admin",
        "description": "Grant a granular permission to a subject (super admin only)",
        "operationId": "post_groups_admin_permissions_assignments",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Action name (read, write, delete, admin)"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Optional expiration timestamp"
                  },
                  "reason": {
                    "type": "string",
                    "description": "Business justification for permission grant"
                  },
                  "resource": {
                    "type": "string",
                    "description": "Resource name"
                  },
                  "service": {
                    "type": "string",
                    "description": "Service name"
                  },
                  "subject_id": {
                    "type": "string",
                    "description": "Subject identifier"
                  },
                  "subject_type": {
                    "type": "string",
                    "description": "Subject type (group, member, corporation, alliance)"
                  }
                },
                "required": [
                  "service",
                  "resource",
                  "action",
                  "subject_type",
                  "subject_id",
                  "reason"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/permissions/assignments/bulk": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create admin",
        "description": "Grant multiple permissions in bulk (super admin only)",
        "operationId": "post_groups_admin_permissions_assignments_bulk",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "string",
                    "description": "Action name (read, write, delete, admin)"
                  },
                  "expires_at": {
                    "type": "string",
                    "format": "date-time",
                    "description": "Optional expiration timestamp"
                  },
                  "reason": {
                    "type": "string",
                    "description": "Business justification for permission grant"
                  },
                  "resource": {
                    "type": "string",
                    "description": "Resource name"
                  },
                  "service": {
                    "type": "string",
                    "description": "Service name"
                  },
                  "subject_id": {
                    "type": "string",
                    "description": "Subject identifier"
                  },
                  "subject_type": {
                    "type": "string",
                    "description": "Subject type (group, member, corporation, alliance)"
                  }
                },
                "required": [
                  "service",
                  "resource",
                  "action",
                  "subject_type",
                  "subject_id",
                  "reason"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/permissions/assignments/{assignmentID}": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete admin",
        "description": "Revoke a specific permission assignment (super admin only)",
        "operationId": "delete_groups_admin_permissions_assignments_assignmentID",
        "parameters": [
          {
            "name": "assignmentID",
            "in": "path",
            "description": "The assignmentID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/permissions/audit": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List admin",
        "description": "Get permission audit logs with filtering (super admin only)",
        "operationId": "get_groups_admin_permissions_audit",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/permissions/check": {
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create admin",
        "description": "Check granular permission for any user (super admin only)",
        "operationId": "post_groups_admin_permissions_check",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/permissions/check/service/{serviceName}": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get admin",
        "description": "Get all permissions for a specific service (super admin only)",
        "operationId": "get_groups_admin_permissions_check_service_serviceName",
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "description": "The serviceName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/permissions/check/user/{characterID}": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get admin",
        "description": "Get comprehensive permission summary for user (super admin only)",
        "operationId": "get_groups_admin_permissions_check_user_characterID",
        "parameters": [
          {
            "name": "characterID",
            "in": "path",
            "description": "The characterID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/permissions/services": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List admin",
        "description": "List all permission services (super admin only)",
        "operationId": "get_groups_admin_permissions_services",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of items"
                    },
                    "services": {
                      "type": "array",
                      "description": "Array of services",
                      "items": {
                        "type": "object",
                        "description": "Resource item"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create admin",
        "description": "Create a new permission service (super admin only)",
        "operationId": "post_groups_admin_permissions_services",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "description": {
                    "type": "string",
                    "description": "Service description"
                  },
                  "display_name": {
                    "type": "string",
                    "description": "Human-readable service name"
                  },
                  "name": {
                    "type": "string",
                    "description": "Service name (unique identifier)"
                  },
                  "resources": {
                    "type": "array",
                    "description": "Service resources",
                    "items": {
                      "type": "object",
                      "properties": {
                        "actions": {
                          "type": "array",
                          "description": "Available actions for this resource",
                          "items": {
                            "type": "string"
                          }
                        },
                        "display_name": {
                          "type": "string",
                          "description": "Human-readable resource name"
                        },
                        "name": {
                          "type": "string",
                          "description": "Resource name"
                        }
                      }
                    }
                  }
                },
                "required": [
                  "name",
                  "display_name",
                  "resources"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/admin/permissions/services/{serviceName}": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete admin",
        "description": "Delete permission service and all assignments (super admin only)",
        "operationId": "delete_groups_admin_permissions_services_serviceName",
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "description": "The serviceName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get admin",
        "description": "Get specific permission service details (super admin only)",
        "operationId": "get_groups_admin_permissions_services_serviceName",
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "description": "The serviceName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "integer",
                      "description": "Total number of items"
                    },
                    "services": {
                      "type": "array",
                      "description": "Array of services",
                      "items": {
                        "type": "object",
                        "description": "Resource item"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Update admin",
        "description": "Update permission service configuration (super admin only)",
        "operationId": "put_groups_admin_permissions_services_serviceName",
        "parameters": [
          {
            "name": "serviceName",
            "in": "path",
            "description": "The serviceName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/admin/permissions/subjects/groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List admin",
        "description": "List available groups for permission assignment (super admin only)",
        "operationId": "get_groups_admin_permissions_subjects_groups",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/admin/permissions/subjects/validate": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List admin",
        "description": "Validate if a subject exists for permission assignment (super admin only)",
        "operationId": "get_groups_admin_permissions_subjects_validate",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/eve/callback": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "List eve",
        "description": "Handle EVE SSO callback",
        "operationId": "get_auth_eve_callback",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/auth/eve/login": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "List eve",
        "description": "Initiate EVE SSO login",
        "operationId": "get_auth_eve_login",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/auth/eve/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create eve",
        "description": "Refresh access token",
        "operationId": "post_auth_eve_refresh",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/eve/verify": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "List eve",
        "description": "Verify JWT token",
        "operationId": "get_auth_eve_verify",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/health": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "List health",
        "description": "Auth module health check",
        "operationId": "get_auth_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "auth"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create login",
        "description": "Basic login endpoint",
        "operationId": "post_auth_login",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create logout",
        "description": "User logout",
        "operationId": "post_auth_logout",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/profile": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "List profile",
        "description": "Get user profile",
        "operationId": "get_auth_profile",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alliance_id": {
                      "type": "integer",
                      "description": "EVE alliance ID"
                    },
                    "character_id": {
                      "type": "integer",
                      "description": "EVE character ID"
                    },
                    "character_name": {
                      "type": "string",
                      "description": "EVE character name"
                    },
                    "corporation_id": {
                      "type": "integer",
                      "description": "EVE corporation ID"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Internal user ID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/profile/public": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "List profile",
        "description": "Get public profile by ID",
        "operationId": "get_auth_profile_public",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alliance_id": {
                      "type": "integer",
                      "description": "EVE alliance ID"
                    },
                    "character_id": {
                      "type": "integer",
                      "description": "EVE character ID"
                    },
                    "character_name": {
                      "type": "string",
                      "description": "EVE character name"
                    },
                    "corporation_id": {
                      "type": "integer",
                      "description": "EVE corporation ID"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Internal user ID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/profile/refresh": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create profile",
        "description": "Refresh profile from ESI",
        "operationId": "post_auth_profile_refresh",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alliance_id": {
                      "type": "integer",
                      "description": "EVE alliance ID"
                    },
                    "character_id": {
                      "type": "integer",
                      "description": "EVE character ID"
                    },
                    "character_name": {
                      "type": "string",
                      "description": "EVE character name"
                    },
                    "corporation_id": {
                      "type": "integer",
                      "description": "EVE corporation ID"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Internal user ID"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "alliance_id": {
                      "type": "integer",
                      "description": "EVE alliance ID"
                    },
                    "character_id": {
                      "type": "integer",
                      "description": "EVE character ID"
                    },
                    "character_name": {
                      "type": "string",
                      "description": "EVE character name"
                    },
                    "corporation_id": {
                      "type": "integer",
                      "description": "EVE corporation ID"
                    },
                    "user_id": {
                      "type": "string",
                      "description": "Internal user ID"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Create register",
        "description": "User registration endpoint",
        "operationId": "post_auth_register",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/status": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "List status",
        "description": "Get authentication status",
        "operationId": "get_auth_status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/auth/token": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "List token",
        "description": "Retrieve current bearer token",
        "operationId": "get_auth_token",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/auth/user": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "List user",
        "description": "Get current user information",
        "operationId": "get_auth_user",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/alliance/{allianceID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get alliance",
        "description": "Get alliance information",
        "operationId": "get_dev_alliance_allianceID",
        "parameters": [
          {
            "name": "allianceID",
            "in": "path",
            "description": "The allianceID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/alliance/{allianceID}/contacts": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get alliance",
        "description": "Get alliance contacts (requires auth)",
        "operationId": "get_dev_alliance_allianceID_contacts",
        "parameters": [
          {
            "name": "allianceID",
            "in": "path",
            "description": "The allianceID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/alliance/{allianceID}/contacts/labels": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get alliance",
        "description": "Get alliance contact labels (requires auth)",
        "operationId": "get_dev_alliance_allianceID_contacts_labels",
        "parameters": [
          {
            "name": "allianceID",
            "in": "path",
            "description": "The allianceID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/alliance/{allianceID}/corporations": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get alliance",
        "description": "Get alliance member corporations",
        "operationId": "get_dev_alliance_allianceID_corporations",
        "parameters": [
          {
            "name": "allianceID",
            "in": "path",
            "description": "The allianceID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/alliance/{allianceID}/icons": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get alliance",
        "description": "Get alliance icon URLs",
        "operationId": "get_dev_alliance_allianceID_icons",
        "parameters": [
          {
            "name": "allianceID",
            "in": "path",
            "description": "The allianceID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/alliances": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "List alliances",
        "description": "Get all active alliances",
        "operationId": "get_dev_alliances",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/character/{characterID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get character",
        "description": "Get character information",
        "operationId": "get_dev_character_characterID",
        "parameters": [
          {
            "name": "characterID",
            "in": "path",
            "description": "The characterID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/character/{characterID}/portrait": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get character",
        "description": "Get character portrait URLs",
        "operationId": "get_dev_character_characterID_portrait",
        "parameters": [
          {
            "name": "characterID",
            "in": "path",
            "description": "The characterID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/corporation/{corporationID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get corporation",
        "description": "Get corporation information",
        "operationId": "get_dev_corporation_corporationID",
        "parameters": [
          {
            "name": "corporationID",
            "in": "path",
            "description": "The corporationID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/corporation/{corporationID}/alliancehistory": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get corporation",
        "description": "Get corporation alliance history",
        "operationId": "get_dev_corporation_corporationID_alliancehistory",
        "parameters": [
          {
            "name": "corporationID",
            "in": "path",
            "description": "The corporationID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/corporation/{corporationID}/icons": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get corporation",
        "description": "Get corporation icon URLs",
        "operationId": "get_dev_corporation_corporationID_icons",
        "parameters": [
          {
            "name": "corporationID",
            "in": "path",
            "description": "The corporationID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/corporation/{corporationID}/members": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get corporation",
        "description": "Get corporation members (requires auth)",
        "operationId": "get_dev_corporation_corporationID_members",
        "parameters": [
          {
            "name": "corporationID",
            "in": "path",
            "description": "The corporationID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/corporation/{corporationID}/membertracking": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get corporation",
        "description": "Get corporation member tracking (requires auth)",
        "operationId": "get_dev_corporation_corporationID_membertracking",
        "parameters": [
          {
            "name": "corporationID",
            "in": "path",
            "description": "The corporationID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/corporation/{corporationID}/roles": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get corporation",
        "description": "Get corporation member roles (requires auth)",
        "operationId": "get_dev_corporation_corporationID_roles",
        "parameters": [
          {
            "name": "corporationID",
            "in": "path",
            "description": "The corporationID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/corporation/{corporationID}/standings": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get corporation",
        "description": "Get corporation standings (requires auth)",
        "operationId": "get_dev_corporation_corporationID_standings",
        "parameters": [
          {
            "name": "corporationID",
            "in": "path",
            "description": "The corporationID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/corporation/{corporationID}/structures": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get corporation",
        "description": "Get corporation structures (requires auth)",
        "operationId": "get_dev_corporation_corporationID_structures",
        "parameters": [
          {
            "name": "corporationID",
            "in": "path",
            "description": "The corporationID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/corporation/{corporationID}/wallets": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get corporation",
        "description": "Get corporation wallets (requires auth)",
        "operationId": "get_dev_corporation_corporationID_wallets",
        "parameters": [
          {
            "name": "corporationID",
            "in": "path",
            "description": "The corporationID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/dev/esi-status": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "List esi-status",
        "description": "Get EVE Online server status",
        "operationId": "get_dev_esi-status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/health": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "List health",
        "description": "Dev module health check",
        "operationId": "get_dev_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "dev"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/agent/{agentID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get agent information from SDE",
        "operationId": "get_dev_sde_agent_agentID",
        "parameters": [
          {
            "name": "agentID",
            "in": "path",
            "description": "The agentID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/agents/location/{locationID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get agents by location from SDE",
        "operationId": "get_dev_sde_agents_location_locationID",
        "parameters": [
          {
            "name": "locationID",
            "in": "path",
            "description": "The locationID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/blueprint/{blueprintID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get blueprint information from SDE",
        "operationId": "get_dev_sde_blueprint_blueprintID",
        "parameters": [
          {
            "name": "blueprintID",
            "in": "path",
            "description": "The blueprintID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/blueprints": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "List sde",
        "description": "Get all available blueprint IDs from SDE",
        "operationId": "get_dev_sde_blueprints",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/category/{categoryID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get category information from SDE",
        "operationId": "get_dev_sde_category_categoryID",
        "parameters": [
          {
            "name": "categoryID",
            "in": "path",
            "description": "The categoryID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/marketgroup/{marketGroupID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get market group information from SDE",
        "operationId": "get_dev_sde_marketgroup_marketGroupID",
        "parameters": [
          {
            "name": "marketGroupID",
            "in": "path",
            "description": "The marketGroupID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/marketgroups": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "List sde",
        "description": "Get all market groups from SDE",
        "operationId": "get_dev_sde_marketgroups",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/metagroup/{metaGroupID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get meta group information from SDE",
        "operationId": "get_dev_sde_metagroup_metaGroupID",
        "parameters": [
          {
            "name": "metaGroupID",
            "in": "path",
            "description": "The metaGroupID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/metagroups": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "List sde",
        "description": "Get all meta groups from SDE",
        "operationId": "get_dev_sde_metagroups",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/npccorp/{corpID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get NPC corporation information from SDE",
        "operationId": "get_dev_sde_npccorp_corpID",
        "parameters": [
          {
            "name": "corpID",
            "in": "path",
            "description": "The corpID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/npccorps": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "List sde",
        "description": "Get all NPC corporations from SDE",
        "operationId": "get_dev_sde_npccorps",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/npccorps/faction/{factionID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get NPC corporations by faction from SDE",
        "operationId": "get_dev_sde_npccorps_faction_factionID",
        "parameters": [
          {
            "name": "factionID",
            "in": "path",
            "description": "The factionID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/redis/{type}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get all entities of type from Redis",
        "operationId": "get_dev_sde_redis_type",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/redis/{type}/{id}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get specific SDE entity from Redis",
        "operationId": "get_dev_sde_redis_type_id",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/status": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "List sde",
        "description": "Get SDE service status and statistics",
        "operationId": "get_dev_sde_status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/type/{typeID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get type information from SDE",
        "operationId": "get_dev_sde_type_typeID",
        "parameters": [
          {
            "name": "typeID",
            "in": "path",
            "description": "The typeID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/typeid/{typeID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get type ID information from SDE",
        "operationId": "get_dev_sde_typeid_typeID",
        "parameters": [
          {
            "name": "typeID",
            "in": "path",
            "description": "The typeID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/typematerials/{typeID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get type materials from SDE",
        "operationId": "get_dev_sde_typematerials_typeID",
        "parameters": [
          {
            "name": "typeID",
            "in": "path",
            "description": "The typeID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/types": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "List sde",
        "description": "Get all types from SDE",
        "operationId": "get_dev_sde_types",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/types/group/{groupID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get types by group ID from SDE",
        "operationId": "get_dev_sde_types_group_groupID",
        "parameters": [
          {
            "name": "groupID",
            "in": "path",
            "description": "The groupID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/types/published": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "List sde",
        "description": "Get all published types from SDE",
        "operationId": "get_dev_sde_types_published",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/universe/{universeType}/{regionName}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get region data from universe SDE",
        "operationId": "get_dev_sde_universe_universeType_regionName",
        "parameters": [
          {
            "name": "universeType",
            "in": "path",
            "description": "The universeType identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "regionName",
            "in": "path",
            "description": "The regionName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/universe/{universeType}/{regionName}/systems": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get all solar systems in region",
        "operationId": "get_dev_sde_universe_universeType_regionName_systems",
        "parameters": [
          {
            "name": "universeType",
            "in": "path",
            "description": "The universeType identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "regionName",
            "in": "path",
            "description": "The regionName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/universe/{universeType}/{regionName}/{constellationName}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get constellation data from universe SDE",
        "operationId": "get_dev_sde_universe_universeType_regionName_constellationName",
        "parameters": [
          {
            "name": "universeType",
            "in": "path",
            "description": "The universeType identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "regionName",
            "in": "path",
            "description": "The regionName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "constellationName",
            "in": "path",
            "description": "The constellationName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/universe/{universeType}/{regionName}/{constellationName}/systems": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get all solar systems in constellation",
        "operationId": "get_dev_sde_universe_universeType_regionName_constellationName_systems",
        "parameters": [
          {
            "name": "universeType",
            "in": "path",
            "description": "The universeType identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "regionName",
            "in": "path",
            "description": "The regionName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "constellationName",
            "in": "path",
            "description": "The constellationName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/sde/universe/{universeType}/{regionName}/{constellationName}/{systemName}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get sde",
        "description": "Get system data from universe SDE",
        "operationId": "get_dev_sde_universe_universeType_regionName_constellationName_systemName",
        "parameters": [
          {
            "name": "universeType",
            "in": "path",
            "description": "The universeType identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "regionName",
            "in": "path",
            "description": "The regionName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "constellationName",
            "in": "path",
            "description": "The constellationName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "systemName",
            "in": "path",
            "description": "The systemName identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/services": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "List services",
        "description": "List available development services",
        "operationId": "get_dev_services",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/status": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "List status",
        "description": "Get module status",
        "operationId": "get_dev_status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/universe/station/{stationID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get universe",
        "description": "Get station information",
        "operationId": "get_dev_universe_station_stationID",
        "parameters": [
          {
            "name": "stationID",
            "in": "path",
            "description": "The stationID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/dev/universe/system/{systemID}": {
      "get": {
        "tags": [
          "Dev"
        ],
        "summary": "Get universe",
        "description": "Get solar system information",
        "operationId": "get_dev_universe_system_systemID",
        "parameters": [
          {
            "name": "systemID",
            "in": "path",
            "description": "The systemID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/groups": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List groups",
        "description": "List all groups with user's membership status",
        "operationId": "get_groups_groups",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "Create groups",
        "description": "Create a new custom group (admin only)",
        "operationId": "post_groups_groups",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/groups/{groupsID}": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete groups",
        "description": "Delete a custom group (admin only)",
        "operationId": "delete_groups_groups_groupsID",
        "parameters": [
          {
            "name": "groupsID",
            "in": "path",
            "description": "The groupsID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Groups"
        ],
        "summary": "Update groups",
        "description": "Update an existing group (admin only)",
        "operationId": "put_groups_groups_groupsID",
        "parameters": [
          {
            "name": "groupsID",
            "in": "path",
            "description": "The groupsID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/groups/{groupsID}/members": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "Get groups",
        "description": "List all members of a group (admin only)",
        "operationId": "get_groups_groups_groupsID_members",
        "parameters": [
          {
            "name": "groupsID",
            "in": "path",
            "description": "The groupsID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Groups"
        ],
        "summary": "POST /groups/{groupsID}/members",
        "description": "Add a member to a group (admin only)",
        "operationId": "post_groups_groups_groupsID_members",
        "parameters": [
          {
            "name": "groupsID",
            "in": "path",
            "description": "The groupsID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/groups/{groupsID}/members/{characterID}": {
      "delete": {
        "tags": [
          "Groups"
        ],
        "summary": "Delete groups",
        "description": "Remove a member from a group (admin only)",
        "operationId": "delete_groups_groups_groupsID_members_characterID",
        "parameters": [
          {
            "name": "groupsID",
            "in": "path",
            "description": "The groupsID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "characterID",
            "in": "path",
            "description": "The characterID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/health": {
      "get": {
        "tags": [
          "Gateway"
        ],
        "summary": "List health",
        "description": "Gateway health check with version information",
        "operationId": "get_gateway_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "gateway"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "List ",
        "description": "List notifications",
        "operationId": "get_notifications_root",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Notifications"
        ],
        "summary": "Create ",
        "description": "Send a new notification",
        "operationId": "post_notifications_root",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/notifications/health": {
      "get": {
        "tags": [
          "Notifications"
        ],
        "summary": "List health",
        "description": "Notifications module health check",
        "operationId": "get_notifications_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "notifications"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/notifications/{id}": {
      "put": {
        "tags": [
          "Notifications"
        ],
        "summary": "Update {id}",
        "description": "Mark notification as read",
        "operationId": "put_notifications_id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/permissions/check": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List permissions",
        "description": "Check if user has specific permission (legacy system)",
        "operationId": "get_groups_permissions_check",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/permissions/user": {
      "get": {
        "tags": [
          "Groups"
        ],
        "summary": "List permissions",
        "description": "Get user's complete permission matrix (legacy system)",
        "operationId": "get_groups_permissions_user",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/health": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "List health",
        "description": "Scheduler module health check",
        "operationId": "get_scheduler_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "scheduler"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/scheduler/reload": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Create reload",
        "description": "Reload scheduler configuration",
        "operationId": "post_scheduler_reload",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/stats": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "List stats",
        "description": "Get scheduler statistics and metrics",
        "operationId": "get_scheduler_stats",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/scheduler/status": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "List status",
        "description": "Get scheduler service status",
        "operationId": "get_scheduler_status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/scheduler/tasks": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "List tasks",
        "description": "List all scheduled tasks",
        "operationId": "get_scheduler_tasks",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "tasks": {
                      "type": "array",
                      "description": "Array of scheduled tasks",
                      "items": {
                        "type": "object",
                        "description": "Task object"
                      }
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of tasks"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Create tasks",
        "description": "Create a new scheduled task",
        "operationId": "post_scheduler_tasks",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "description": "Task-specific configuration"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether task is enabled"
                  },
                  "name": {
                    "type": "string",
                    "description": "Task name"
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Cron schedule expression"
                  },
                  "type": {
                    "type": "string",
                    "description": "Task type (http, function, system)"
                  }
                },
                "required": [
                  "name",
                  "type",
                  "schedule"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}": {
      "delete": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Delete tasks",
        "description": "Delete scheduled task",
        "operationId": "delete_scheduler_tasks_taskID",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "204": {
            "description": "Resource deleted successfully"
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Get tasks",
        "description": "Get task details by ID",
        "operationId": "get_scheduler_tasks_taskID",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Update tasks",
        "description": "Update task configuration",
        "operationId": "put_scheduler_tasks_taskID",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}/executions/{executionID}": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Get tasks",
        "description": "Get specific execution details",
        "operationId": "get_scheduler_tasks_taskID_executions_executionID",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "executionID",
            "in": "path",
            "description": "The executionID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}/history": {
      "get": {
        "tags": [
          "Scheduler"
        ],
        "summary": "Get tasks",
        "description": "Get task execution history",
        "operationId": "get_scheduler_tasks_taskID_history",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}/pause": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "POST /tasks/{taskID}/pause",
        "description": "Pause scheduled task",
        "operationId": "post_scheduler_tasks_taskID_pause",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "description": "Task-specific configuration"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether task is enabled"
                  },
                  "name": {
                    "type": "string",
                    "description": "Task name"
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Cron schedule expression"
                  },
                  "type": {
                    "type": "string",
                    "description": "Task type (http, function, system)"
                  }
                },
                "required": [
                  "name",
                  "type",
                  "schedule"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}/resume": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "POST /tasks/{taskID}/resume",
        "description": "Resume paused task",
        "operationId": "post_scheduler_tasks_taskID_resume",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "description": "Task-specific configuration"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether task is enabled"
                  },
                  "name": {
                    "type": "string",
                    "description": "Task name"
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Cron schedule expression"
                  },
                  "type": {
                    "type": "string",
                    "description": "Task type (http, function, system)"
                  }
                },
                "required": [
                  "name",
                  "type",
                  "schedule"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}/start": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "POST /tasks/{taskID}/start",
        "description": "Start/enable scheduled task",
        "operationId": "post_scheduler_tasks_taskID_start",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "description": "Task-specific configuration"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether task is enabled"
                  },
                  "name": {
                    "type": "string",
                    "description": "Task name"
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Cron schedule expression"
                  },
                  "type": {
                    "type": "string",
                    "description": "Task type (http, function, system)"
                  }
                },
                "required": [
                  "name",
                  "type",
                  "schedule"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/scheduler/tasks/{taskID}/stop": {
      "post": {
        "tags": [
          "Scheduler"
        ],
        "summary": "POST /tasks/{taskID}/stop",
        "description": "Stop/disable scheduled task",
        "operationId": "post_scheduler_tasks_taskID_stop",
        "parameters": [
          {
            "name": "taskID",
            "in": "path",
            "description": "The taskID identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "config": {
                    "type": "object",
                    "description": "Task-specific configuration"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Whether task is enabled"
                  },
                  "name": {
                    "type": "string",
                    "description": "Task name"
                  },
                  "schedule": {
                    "type": "string",
                    "description": "Cron schedule expression"
                  },
                  "type": {
                    "type": "string",
                    "description": "Task type (http, function, system)"
                  }
                },
                "required": [
                  "name",
                  "type",
                  "schedule"
                ]
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "description": "Task ID"
                    },
                    "name": {
                      "type": "string",
                      "description": "Task name"
                    },
                    "next_run": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Next execution time"
                    },
                    "status": {
                      "type": "string",
                      "description": "Task status"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sde/check": {
      "post": {
        "tags": [
          "Sde"
        ],
        "summary": "Create check",
        "description": "Check for new SDE versions",
        "operationId": "post_sde_check",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sde/entities/{type}": {
      "get": {
        "tags": [
          "Sde"
        ],
        "summary": "Get entities",
        "description": "Get all entities of a specific type",
        "operationId": "get_sde_entities_type",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sde/entity/{type}/{id}": {
      "get": {
        "tags": [
          "Sde"
        ],
        "summary": "Get entity",
        "description": "Get individual SDE entity by type and ID",
        "operationId": "get_sde_entity_type_id",
        "parameters": [
          {
            "name": "type",
            "in": "path",
            "description": "The type identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sde/health": {
      "get": {
        "tags": [
          "Sde"
        ],
        "summary": "List health",
        "description": "SDE module health check",
        "operationId": "get_sde_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "sde"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/sde/progress": {
      "get": {
        "tags": [
          "Sde"
        ],
        "summary": "List progress",
        "description": "Get real-time SDE update progress",
        "operationId": "get_sde_progress",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sde/search/solarsystem": {
      "get": {
        "tags": [
          "Sde"
        ],
        "summary": "List search",
        "description": "Search for solar systems by name (query param: name)",
        "operationId": "get_sde_search_solarsystem",
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "description": "Search query string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/sde/status": {
      "get": {
        "tags": [
          "Sde"
        ],
        "summary": "List status",
        "description": "Get current SDE version and status",
        "operationId": "get_sde_status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "last_update": {
                      "type": "string",
                      "format": "date-time",
                      "description": "Last update timestamp"
                    },
                    "status": {
                      "type": "string",
                      "description": "SDE status"
                    },
                    "version": {
                      "type": "string",
                      "description": "Current SDE version"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/sde/test/store-sample": {
      "post": {
        "tags": [
          "Sde"
        ],
        "summary": "Create test",
        "description": "Store sample test data for development",
        "operationId": "post_sde_test_store-sample",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sde/test/verify": {
      "get": {
        "tags": [
          "Sde"
        ],
        "summary": "List test",
        "description": "Verify individual key storage functionality",
        "operationId": "get_sde_test_verify",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/sde/update": {
      "post": {
        "tags": [
          "Sde"
        ],
        "summary": "Create update",
        "description": "Initiate SDE update process",
        "operationId": "post_sde_update",
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "description": "Request data varies by endpoint",
                "properties": {
                  "data": {
                    "type": "object",
                    "description": "Request payload"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "201": {
            "description": "Resource created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List ",
        "description": "List users with pagination and filtering (requires users:read permission)",
        "operationId": "get_users_root",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "page": {
                      "type": "integer",
                      "description": "Current page number"
                    },
                    "page_size": {
                      "type": "integer",
                      "description": "Number of items per page"
                    },
                    "total": {
                      "type": "integer",
                      "description": "Total number of users"
                    },
                    "total_pages": {
                      "type": "integer",
                      "description": "Total number of pages"
                    },
                    "users": {
                      "type": "array",
                      "description": "Array of users",
                      "items": {
                        "type": "object",
                        "description": "User object"
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/by-user-id/{user_id}/characters": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get by-user-id",
        "description": "List characters for a user (requires authentication, self-access or users:read permission)",
        "operationId": "get_users_by-user-id_user_id_characters",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "description": "The user_id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    },
    "/users/health": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List health",
        "description": "Users module health check",
        "operationId": "get_users_health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "module": {
                      "type": "string",
                      "description": "Module name",
                      "example": "users"
                    },
                    "status": {
                      "type": "string",
                      "description": "Health status",
                      "example": "healthy"
                    }
                  },
                  "required": [
                    "status"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/users/stats": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "List stats",
        "description": "Get user statistics (public endpoint)",
        "operationId": "get_users_stats",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "banned_users": {
                      "type": "integer",
                      "description": "Number of banned users"
                    },
                    "disabled_users": {
                      "type": "integer",
                      "description": "Number of disabled users"
                    },
                    "enabled_users": {
                      "type": "integer",
                      "description": "Number of enabled users"
                    },
                    "invalid_users": {
                      "type": "integer",
                      "description": "Number of invalid users"
                    },
                    "total_users": {
                      "type": "integer",
                      "description": "Total number of users"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        }
      }
    },
    "/users/{character_id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get {character_id}",
        "description": "Get user by character ID (requires users:read permission)",
        "operationId": "get_users_character_id",
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "description": "The character_id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      },
      "put": {
        "tags": [
          "Users"
        ],
        "summary": "Update {character_id}",
        "description": "Update user status and settings (requires users:write permission)",
        "operationId": "put_users_character_id",
        "parameters": [
          {
            "name": "character_id",
            "in": "path",
            "description": "The character_id identifier",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Request payload",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "banned": {
                    "type": "boolean",
                    "description": "Ban/unban user"
                  },
                  "enabled": {
                    "type": "boolean",
                    "description": "Enable/disable user"
                  },
                  "invalid": {
                    "type": "boolean",
                    "description": "Set validity status"
                  },
                  "notes": {
                    "type": "string",
                    "description": "Update administrative notes"
                  },
                  "position": {
                    "type": "integer",
                    "description": "Update position/rank"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "description": "Response data varies by endpoint",
                  "properties": {
                    "message": {
                      "type": "string",
                      "description": "Response message"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          },
          "401": {
            "description": "Authentication required",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authentication error message"
                }
              }
            }
          },
          "403": {
            "description": "Forbidden - insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Authorization error message"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "description": "Error message"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string",
            "description": "Error code"
          },
          "error": {
            "type": "string",
            "description": "Error message"
          }
        },
        "required": [
          "error"
        ]
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "description": "Service status",
            "example": "healthy"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "Response timestamp"
          },
          "version": {
            "type": "string",
            "description": "Service version"
          }
        },
        "required": [
          "status"
        ]
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "description": "JWT token obtained from EVE Online SSO authentication",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "Sde",
      "description": "EVE Online Static Data Export management endpoints"
    },
    {
      "name": "Auth",
      "description": "Authentication and authorization endpoints using EVE Online SSO"
    },
    {
      "name": "Groups",
      "description": "Group management and permission system endpoints"
    },
    {
      "name": "Dev",
      "description": "Development and testing endpoints for EVE Online ESI and SDE data"
    },
    {
      "name": "Users",
      "description": "User management and profile endpoints"
    },
    {
      "name": "Notifications",
      "description": "Notification system endpoints"
    },
    {
      "name": "Scheduler",
      "description": "Task scheduling and management endpoints"
    },
    {
      "name": "Gateway",
      "description": "Gateway health and status endpoints"
    }
  ],
  "externalDocs": {
    "description": "Go-Falcon Documentation",
    "url": "https://github.com/go-falcon/go-falcon/blob/main/README.md"
  }
}